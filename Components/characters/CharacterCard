import React from 'react';
import { motion } from "framer-motion";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Button } from "@/components/ui/button";
import { Link } from "react-router-dom";
import { createPageUrl } from "@/utils";
import { 
  Edit3, 
  User, 
  Crown, 
  Swords, 
  Shield,
  Heart,
  Zap,
  Eye
} from "lucide-react";

export default function CharacterCard({ character, index, onRefresh }) {
  const getEditionBadge = (edition) => {
    return edition === "dnd35" ? "D&D 3.5" : "D&D 5.0";
  };

  const getEditionColor = (edition) => {
    return edition === "dnd35" 
      ? "bg-amber-100 text-amber-800 border-amber-300" 
      : "bg-emerald-100 text-emerald-800 border-emerald-300";
  };

  const getModifier = (stat) => {
    const mod = Math.floor((stat - 10) / 2);
    return mod >= 0 ? `+${mod}` : `${mod}`;
  };

  return (
    <motion.div
      initial={{ opacity: 0, y: 20 }}
      animate={{ opacity: 1, y: 0 }}
      transition={{ delay: index * 0.1 }}
      whileHover={{ y: -4 }}
    >
      <Card className="medieval-card hover:shadow-xl transition-all duration-300 group">
        <CardHeader className="pb-3">
          <div className="flex justify-between items-start">
            <div className="flex-1">
              <CardTitle className="text-xl font-bold text-text-dark mb-1 group-hover:text-medieval-brown transition-colors">
                {character.name || "Sem Nome"}
              </CardTitle>
              <div className="flex items-center gap-2 text-sm text-medieval-brown">
                <User className="w-4 h-4" />
                <span>{character.player || "Jogador Anônimo"}</span>
              </div>
            </div>
            <Badge className={`${getEditionColor(character.edition)} border font-medium`}>
              {getEditionBadge(character.edition)}
            </Badge>
          </div>
        </CardHeader>

        <CardContent className="space-y-4">
          {/* Character Info */}
          <div className="grid grid-cols-2 gap-3 text-sm">
            <div className="flex items-center gap-2">
              <Crown className="w-4 h-4 text-medieval-gold" />
              <span className="text-text-dark">
                <strong>Raça:</strong> {character.race || "—"}
              </span>
            </div>
            <div className="flex items-center gap-2">
              <Swords className="w-4 h-4 text-medieval-brown" />
              <span className="text-text-dark">
                <strong>Classe:</strong> {character.character_class || "—"}
              </span>
            </div>
            <div className="flex items-center gap-2">
              <Zap className="w-4 h-4 text-purple-600" />
              <span className="text-text-dark">
                <strong>Nível:</strong> {character.level || 1}
              </span>
            </div>
            <div className="flex items-center gap-2">
              <Heart className="w-4 h-4 text-red-500" />
              <span className="text-text-dark">
                <strong>HP:</strong> {character.hit_points_current || 0}/{character.hit_points_max || 8}
              </span>
            </div>
          </div>

          {/* Attributes */}
          <div className="border-t border-medieval-gold pt-3">
            <h4 className="text-sm font-semibold text-medieval-brown mb-2">Atributos Principais</h4>
            <div className="grid grid-cols-3 gap-2 text-xs">
              <div className="text-center p-2 bg-gradient-to-b from-light-gold to-parchment rounded-lg border border-medieval-gold">
                <div className="font-bold text-medieval-brown">FOR</div>
                <div className="text-text-dark font-semibold">
                  {character.strength || 10} ({getModifier(character.strength || 10)})
                </div>
              </div>
              <div className="text-center p-2 bg-gradient-to-b from-light-gold to-parchment rounded-lg border border-medieval-gold">
                <div className="font-bold text-medieval-brown">DES</div>
                <div className="text-text-dark font-semibold">
                  {character.dexterity || 10} ({getModifier(character.dexterity || 10)})
                </div>
              </div>
              <div className="text-center p-2 bg-gradient-to-b from-light-gold to-parchment rounded-lg border border-medieval-gold">
                <div className="font-bold text-medieval-brown">CON</div>
                <div className="text-text-dark font-semibold">
                  {character.constitution || 10} ({getModifier(character.constitution || 10)})
                </div>
              </div>
            </div>
          </div>

          {/* Actions */}
          <div className="flex gap-2 pt-2">
            <Link to={createPageUrl(`EditCharacter?id=${character.id}`)} className="flex-1">
              <Button className="w-full medieval-button rounded-lg text-sm">
                <Edit3 className="w-4 h-4 mr-2" />
                Editar
              </Button>
            </Link>
            <Link to={createPageUrl(`ViewCharacter?id=${character.id}`)}>
              <Button variant="outline" className="px-3 border-medieval-gold hover:bg-light-gold">
                <Eye className="w-4 h-4" />
              </Button>
            </Link>
          </div>
        </CardContent>
      </Card>
    </motion.div>
  );
}
